#
# Configuration file for windmon - The MSC Wind Logging and Display Software
#
# All text between a '#' character and end of line is treated as a comment.
#
# Parameters which specify directory of filenames may:
# 1) Include "%HOME%" to denote the current users home folder,
#    e.g. %HOME%/wind/data
# 2) Be relative to the directory in which the app is started, or absolute.
#
# GUI = Graphical User Interface. Displays wind data captured either directly
#       from the seraial port, or from the socket server process via a TCP
#       socket connection. Can store historical data to files, or read
#       historical data from a MySql database (populated by the server)
#
# Server = The socket server process that captures NMEA data from the serial
#          port and relays it to one or more TCP sockect connections. Also
#          records data to a MySql database.

# AppLogDirectory
# Directory to which log output is written by the GUI. 
AppLogDirectory=log


# AppLogLevel
# Possible values by increasing precedence are:
#     OFF
#     SEVERE
#     WARNING
#     INFO
#     CONFIG
#     FINE
#     FINER
#     FINEST
# The application will only output application log messages with a precendence
# great or equal to the value specified in this parameter. e.g. If set to ERROR
# then only ERROR and FATAL messages will be reported.
AppLogLevel=INFO

# ScreenMode - Determines nature of GUI
#     FullScreen - Full screen with no borders
#     Normal     - Maximised application window with usual borders etc
#     Headless   - No display on screen. Just back-end functionality 
ScreenMode=Normal
#ScreenMode=FullScreen
#ScreenMode=Headless


# ShowTicker
#     Y - Show animated ticker display
#     N - Hide animated ticker display
ShowTickerYN=Y

# InitialTickerText
# Text displayed in the ticker when application if first started.
InitialTickerText=Marconi SC Weather Station

# TickerFilename
# File from which to load text to be shown on GUI ticker display. This text
# will be alternated with any messages generated by the GUI itself. Updates to
# this file are polled for at interval configured in TickerFileCheckInterval
# This parameter is optional.
# An example of use is to automate the download of weather forecast into
# the ticker file using a shell script or similar. 
TickerFilename=config/ticker.txt

# TickerFileCheckInterval
# Interval (secs) at which to check for changes in the ticker file.
TickerFileCheckIntervalSec=60

# TickerFontName, TickerFontSize, TickerDisplayIntervalSecs
TickerFontName=serif
TickerFontSize=24
TickerDisplayIntervalSecs=5


# ConnectionType - Specifies how NMEA wind data is collected
#     serial - Connects directly to NMEA device via serial port
#     socket - Connect via socket to another instance of windmon
#              to receive relayed NMEA data.
#     dummy  - Dummy data generated within application for testing only.
#ConnectionType=serial
#ConnectionType=socket
ConnectionType=dummy

# Socket Connection Settings.
# Determines source of NMEA data when ConnectionType=socket.
SocketConnectionHost=192.168.56.101
SocketConnectionPort=2690

# Enable this windmon instance to relay NMEA data to other windmon instances
# via TCP/IP socket.
SocketServerEnabledYN=Y

# Port on which to listen and accept connections for NMEA data relay
SocketServerPort=2690

# NMEASerialPort
# Specifies device through which serial port is accessed.
# Must be set if ConnectionType=serial
NMEASerialPort=COM3      

# NMEALinkRetryIntervalSec
# If the serial or socket connection is lost
# or no data received, this parameter specifies the  interval between attempts
# to reconnect
NMEALinkRetryIntervalSec=10

# LogMode - Determines how graph data is obtained. Values are:
#     DB - Data retrieved from database (populated by socket server)
#     file - GUI stores data in files in order to build graphs.
#            Data persists between executions of the GUI
#     live - GUI stores data in memory order to build graphs. Data is lost when
#            GUI is shut down
#LogMode=DB
#LogMode=live
LogMode=file

# DB... . Parameters for the database connection. Used to fetch graph data
# if LogMode=DB
DBUser=windmon
DB=windmon
DBHost=localhost
DBPassword=p1p2p3p4

# DisplayDigitalUpdateIntervalMilliSec - The period between updates of the live
# data digital read-out. Does not affect the analogue dial.
DisplayDigitalUpdateIntervalMilliSec=500

# WindLogRecordIntervalSec - Determines the sample period
# at which wind data is stored to database or file.
# 300 = 5 minutes
WindLogRecordIntervalSec=300

# DBPollIntervalSec - If LogMode=DB then this parameter specifies the
# interval at which the GUI checks for new wind data in the database.
# For other LogMode values this parameter is ignored
DBPollIntervalSec=10

# WindLogDataDirectory - Directory where wind data files are held if LogMode=file
WindLogDataDirectory=data

# WindLogHistorySec - The interval over which graphical data is
# shown (e.g. 7200 means that data for the last 2 hours is plotted)
WindLogHistorySec=14400

# GenerateWebFiles(GUI) Y/N - Determines whether web upload text and images are
# output to WindLogDataDirectory
GenerateWebFilesYN=N

# WindLogUploadDirectory - Local directory where GUI generates web upload files
# if GenerateWebFilesYN=Y
WindLogUploadDirectory=%HOME%/windmon/web

# ReportTemplate
# Full path to template file used to generate text file for web upload.
# Required if GenerateWebFiles=Y
# e.g. ReportTemplate=
ReportTemplate=config/windmon_info_template.html

# WindLog...Width/Height - Dimensions of the images generated by GUI for
# web upload. Required if GenerateWebFiles=Y
WindLogGraphImageWidth=500
WindLogGraphImageHeight=300
WindLogDialImageHeight=200


# FTPUploadToWebYN(GUI) Y/N - Determines whether images and text are uploaded
# direct to FTP site by windmon. If set to N, then some external file transfer
# mechanism must be implemented.
FTPUploadToWebYN=Y

# FTP Details for web upload
FTPHost=some.ftp.host
FTPUser=ftpuser
FTPPassword=fptuserpass
FTPRemoteDirectory=www/weatherstation

# File names assigned to files once uploaded via FTP.
FTPRemoteNameDial=dialx.png
FTPRemoteNameSpeed=speed.png
FTPRemoteNameAngle=angle.png
FTPRemoteNameReport=current.html

# In addition to the web upload, windmon can also generate and upload a data file
# for near-realtime display of wind conditions using animated html control.
FTPLiveUpdateYN=Y
FTPLiveUpdateIntervalSec=5
FTPLiveUpdateRecordsPerFile=12
FTPRemoteNameLiveUpdate=live_update.txt


# IMPORTANT - leave blank line at end
